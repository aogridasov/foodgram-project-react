name: foodgram_workflow

on: [push]

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    
    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v1

    - name: Docker Login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: ./backend/foodgram/
        push: true
        tags: aogridasov/foodgram:latest


  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_SERVER_IP }}
        username: ${{ secrets.PROD_SERVER_USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          sudo docker-compose stop
          sudo rm .env
          touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo PROD_SERVER_IP=${{ secrets.PROD_SERVER_IP }} >> .env
          echo PROD_SERVER_ADRESS=${{ secrets.PROD_SERVER_ADRESS }} >> .env
          echo DEV_MODE=${{ secrets.DEV_MODE }} >> .env
          echo DB_IS_SQLITE=${{ secrets.DB_IS_SQLITE }} >> .env
          sudo docker container rm agridasov_web_1
          sudo docker image rm aogridasov/foodgram
          sudo docker-compose up -d
